# Requires docker-compose >= 1.29.0
version: '3.9'

services:
  gw-readonly:
    container_name: gw-mainnet_v1-readonly
    image: ghcr.io/nervosnetwork/godwoken-prebuilds:1.3.0-rc3
    expose: [8119, 8219]
    healthcheck:
      test: /healthcheck.sh
      start_period: 10s
      interval: 30s
      retries: 100
    working_dir: /deploy
    volumes:
    - ./chain-data/readonly/:/mnt/
    - ./gw-mainnet_v1-config-readonly.toml:/deploy/config.toml
    - ./db.toml:/deploy/db.toml:ro
    - ./healthcheck.sh:/healthcheck.sh:ro
    environment:
    # other log envs: ,gw_generator=debug,gw_chain=debug
    - RUST_LOG=info
    command: godwoken
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  postgres:
    image: postgres:alpine
    expose: [5432]
    environment:
      POSTGRES_DB: web3-indexer-db
      POSTGRES_USER: your_db_user_name
      POSTGRES_PASSWORD: your_password
    volumes:
    - ./chain-data/postgresql/data:/var/lib/postgresql/data
  
  redis:
    image: redis:bullseye
    user: redis:redis
    volumes:
    - ./chain-data/redis-data:/data

  web3:
    image: nervos/godwoken-web3-prebuilds:v1.3.0-rc1
    healthcheck:
      test: curl http://127.0.0.1:8024 || exit 1
    volumes:
    - ./web3.env:/godwoken-web3/packages/api-server/.env
    working_dir: /godwoken-web3
    command: bash -c 'set -ex ; yarn knex migrate:latest && yarn start:prod'
    ports: [8024:8024]
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_started
      gw-readonly:
        condition: service_healthy

  web3-indexer:
    image: nervos/godwoken-web3-indexer-prebuilds:v1.3.0-rc1
    volumes:
    - ./web3-indexer-config.toml:/var/lib/web3-indexer/indexer-config.toml
    working_dir: /var/lib/web3-indexer
    command: [ "gw-web3-indexer" ]
    environment:
    - RUST_LOG=info
    depends_on:
      web3:
        condition: service_healthy
